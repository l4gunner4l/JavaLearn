В завершении рассмотрим операции присваивания, которые в основном представляют комбинацию простого присваивания с другими операциями:

=       просто приравнивает одно значение другому: c=b;

+=      c+=b; (переменной c присваивается результат сложения c и b)

-=      c-=b; (переменной c присваивается результат вычитания b из c)

*=      c*=b; (переменной c присваивается результат произведения c и b)

/=      c/=b; (переменной c присваивается результат деления c на b)

%=      c%=b; (переменной c присваивается остаток от деления c на b)

&=      c&=b; (переменной c присваивается значение c&b)

|=      c|=b; (переменной c присваивается значение c|b)

^=      c^=b; (переменной c присваивается значение c^b)

<<=     c<<=b; (переменной c присваивается значение c<<b)

>>=     c>>=b; (переменной c присваивается значение c>>b)

>>>=    c>>>=b; (переменной c присваивается значение c>>>b)

<b>Примеры операций:</b>

<tt>int a = 5;
a += 10;        // 15
a -= 3;         // 12
a *= 2;         // 24
a /= 6;         // 4
a <<= 4;      // 64
a >>= 2;      // 16
System.out.println(a);  // 16</tt>

<b>Приоритет операций</b>

При работе с операциями важно понимать их приоритет, который можно описать следующей таблицей:

<table border = "solid">
<tr><th>expr++ expr--</th></tr>
<tr><th>++expr --expr +expr -expr ~ !</th></tr>
<tr><th>* / %</th></tr>
<tr><th>+ -</th></tr>
<tr><th><< >> >>></th></tr>
<tr><th>< > <= >= instanceof</th></tr>
<tr><th>== !=</th></tr>
<tr><th>&</th></tr>
<tr><th>^</th></tr>
<tr><th>|</th></tr>
<tr><th>&&</th></tr>
<tr><th>||</th></tr>
<tr><th>? : (тернарный оператор)</th></tr>
<tr><th>= += -= *= /= %= &= ^= |= <<= >>= >>>= (операторы присваивания)</th></tr>
</table>

Чем выше оператор в этой таблице, тем больше его приоритет. При этом скобки повышают приоритет операции, используемой в выражении.