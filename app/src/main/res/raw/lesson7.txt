Одним из фундаментальных элементов многих языков программирования являются условные конструкции. Данные конструкции позволяют направить работу программы по одному из путей в зависимости от определенных условий.<br/>
<br/>
В языке Java используются следующие условные конструкции: if..else и switch..case<br/>
<br/>
<br/>

<b>Конструкция if/else</b><br/>
<br/>

Выражение if/else проверяет истинность некоторого условия и в зависимости от результатов проверки выполняет определенный код:<br/>
<tt>int num1 = 6;<br/>
int num2 = 4;<br/>
if(num1>num2){<br/>
    System.out.println("Первое число больше второго");<br/>
}</tt><br/>
<br/>

После ключевого слова if ставится условие. И если это условие выполняется, то срабатывает код, который помещен в далее в блоке if после фигурных скобок. В качестве условий выступает операция сравнения двух чисел.<br/>
<br/>

Так как, в данном случае первое число больше второго, то выражение num1 > num2 истинно и возвращает значение true. Следовательно, управление переходит в блок кода после фигурных скобок и начинает выполнять содержащиеся там инструкции, а конкретно метод System.out.println("Первое число больше второго");. Если бы первое число оказалось бы меньше второго или равно ему, то инструкции в блоке if не выполнялись бы.<br/>
<br/>

Но что, если мы захотим, чтобы при несоблюдении условия также выполнялись какие-либо действия? В этом случае мы можем добавить блок else:<br/>
<tt>int num1 = 6;<br/>
int num2 = 4;<br/>
if(num1>num2){<br/>
    System.out.println("Первое число больше второго");<br/>
}<br/>
else{<br/>
    System.out.println("Первое число меньше второго");<br/>
}</tt><br/>
<br/>

Но при сравнении чисел мы можем насчитать три состояния: первое число больше второго, первое число меньше второго и числа равны. С помощью выражения else if, мы можем обрабатывать дополнительные условия:<br/>
<tt>int num1 = 6;<br/>
int num2 = 8;<br/>
if(num1>num2){<br/>
    System.out.println("Первое число больше второго");<br/>
}<br/>
else if(num1<num2){<br/>
    System.out.println("Первое число меньше второго");<br/>
}<br/>
else{<br/>
    System.out.println("Числа равны");<br/>
}</tt><br/>
<br/>

Также мы можем соединить сразу несколько условий, используя логические операторы:<br/>
<tt>int num1 = 8;<br/>
int num2 = 6;<br/>
if(num1 > num2 && num1>7){<br/>
    System.out.println("Первое число больше второго и больше 7");<br/>
}</tt><br/>
<br/>

Здесь блок if будет выполняться, если num1 > num2 равно true и одновременно num1>7 равно true.<br/>
<br/>
<br/>

<b>Конструкция switch</b><br/>
<br/>
Конструкция switch/case аналогична конструкции if/else, так как позволяет обработать сразу несколько условий:<br/>
<tt>int num = 8;<br/>
switch(num){<br/>
    case 1:<br/>
        System.out.println("число равно 1");<br/>
        break;<br/>
    case 8:<br/>
        System.out.println("число равно 8");<br/>
        num++;<br/>
        break;<br/>
    case 9:<br/>
        System.out.println("число равно 9");<br/>
        break;<br/>
    default:<br/>
        System.out.println("число не равно 1, 8, 9");<br/>
}</tt><br/>
<br/>

После ключевого слова switch в скобках идет сравниваемое выражение. Значение этого выражения последовательно сравнивается со значениями, помещенными после оператора сase. И если совпадение будет найдено, то будет выполняться определенный блок сase.<br/>
<br/>

В конце блока сase ставится оператор break, чтобы избежать выполнения других блоков. Например, если бы убрали бы оператор break в следующем случае:<br/>
<tt>case 8:<br/>
    System.out.println("число равно 8");<br/>
    num++;<br/>
case 9:<br/>
    System.out.println("число равно 9");<br/>
    break;</tt><br/>
<br/>

То так как у нас переменная num равно 8, то выполнился бы блок case 8, но так как в этом блоке переменная num увеличивается на единицу, оператор break отсутствует, то начал бы выполняться блок case 9.<br/>
<br/>
Если мы хотим также обработать ситуацию, когда совпадения не будет найдено, то можно добавить блок default, как в примере выше. Хотя блок default необязателен.<br/>
<br/>

Также мы можем определить одно действие сразу для нескольких блоков case подряд:<br/>
<tt>int num = 3;<br/>
int output = 0;<br/>
switch(num){<br/>
    case 1:<br/>
        output = 3;<br/>
        break;<br/>
    case 2:<br/>
    case 3:<br/>
    case 4:<br/>
        output = 6;<br/>
        break;<br/>
    case 5:<br/>
        output = 12;<br/>
        break;<br/>
    default:<br/>
        output = 24;<br/>
}<br/>
System.out.println(output);</tt><br/>
<br/>
<br/>

<b>Тернарная операция</b><br/>
<br/>
Тернарную операция имеет следующий синтаксис: [первый операнд - условие] ? [второй операнд] : [третий операнд]. Таким образом, в этой операции участвуют сразу три операнда. В зависимости от условия тернарная операция возвращает второй или третий операнд: если условие равно true, то возвращается второй операнд; если условие равно false, то третий. Например:<br/>
<tt>int x=3;<br/>
int y=2;<br/>
int z = x&lt;y? (x+y) : (x-y);<br/>
System.out.println(z);</tt><br/>
<br/>
Здесь результатом тернарной операции является переменная z. Сначала проверяется условие x<y. И если оно соблюдается, то z будет равно второму операнду - (x+y), иначе z будет равно третьему операнду.<br/>