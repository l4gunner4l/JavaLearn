Условные выражения представляют собой некоторое условие и возвращают значение типа boolean, то есть значение true (если условие истинно), или значение false (если условие ложно). К условным выражениям относятся операции сравнения и логические операции.<br/>
<br/>
<b>Операции сравнения</b><br/>
<br/>
В операциях сравнения сравниваются два операнда, и возвращается значение типа boolean - true, если выражение верно, и false, если выражение неверно.<br/>
<br/>

<b>==</b><br/>
сравнивает два операнда на равенство и возвращает true (если операнды равны) и false (если операнды не равны)<br/>
<tt>int a = 10;<br/>
int b = 4;<br/>
boolean c = a == b;         // false<br/>
boolean d = a == 10;       // true</tt><br/>
<br/>

<b>!=</b><br/>
сравнивает два операнда и возвращает true, если операнды НЕ равны, и false, если операнды равны<br/>
<tt>int a = 10;<br/>
int b = 4;<br/>
boolean c = a != b;         // true<br/>
boolean d = a != 10;       // false</tt><br/>
<br/>

<b>< (меньше чем)</b><br/>
Возвращает true, если первый операнд меньше второго, иначе возвращает false<br/>
<tt>int a = 10;<br/>
int b = 4;<br/>
boolean c = a < b;   // false</tt><br/>
<br/>

<b>> (больше чем)</b><br/>
Возвращает true, если первый операнд больше второго, иначе возвращает false<br/>
<tt>int a = 10;<br/>
int b = 4;<br/>
boolean c = a > b;   // true</tt><br/>
<br/>

<b>>= (больше или равно)</b><br/>
Возвращает true, если первый операнд больше второго или равен второму, иначе возвращает false<br/>
<tt>boolean c = 10 >= 10;    // true<br/>
boolean b = 10 >= 4;     // true<br/>
boolean d = 10 >= 20;    // false</tt><br/>
<br/>

<b>&lt;= (меньше или равно)</b><br/>
Возвращает true, если первый операнд меньше второго или равен второму, иначе возвращает false<br/>
<tt>boolean c = 10 &lt;= 10;    // true<br/>
boolean b = 10 &lt;= 4;     // false<br/>
boolean d = 10 &lt;= 20;    // true</tt><br/>
<br/>
<br/>

<b>Логические операции</b><br/>
<br/>

Также в Java есть логические операции, которые также представляют условие и возвращают true или false и обычно объединяют несколько операций сравнения. К логическим операциям относят следующие:<br/>
<br/>
|<br/>c=a|b; (c равно true, если либо a, либо b (либо и a, и b) равны true, иначе c будет равно false)<br/>
<br/>
&<br/>c=a&b; (c равно true, если и a, и b равны true, иначе c будет равно false)<br/>
<br/>
!<br/>c=!b; (c равно true, если b равно false, иначе c будет равно false)<br/>
<br/>
^<br/>c=a^b; (c равно true, если либо a, либо b (но не одновременно) равны true, иначе c будет равно false)<br/>
<br/>
||<br/>c=a||b; (c равно true, если либо a, либо b (либо и a, и b) равны true, иначе c будет равно false)<br/>
<br/>
&&<br/>c=a&&b; (c равно true, если и a, и b равны true, иначе c будет равно false)<br/>
<br/>
<br/>

Здесь у нас две пары операций | и || (а также & и &&) выполняют похожие действия, однако же они не равнозначны.<br/>
<br/>
Выражение c=a|b; будет вычислять сначала оба значения - a и b и на их основе выводить результат.<br/>
<br/>
В выражении же c=a||b; вначале будет вычисляться значение a, и если оно равно true, то вычисление значения b уже смысла не имеет, так как у нас в любом случае уже c будет равно true. Значение b будет вычисляться только в том случае, если a равно false<br/>
<br/>
То же самое касается пары операций &/&&. В выражении c=a&b; будут вычисляться оба значения - a и b.<br/>
<br/>
В выражении же c=a&&b; сначала будет вычисляться значение a, и если оно равно false, то вычисление значения b уже не имеет смысла, так как значение c в любом случае равно false. Значение b будет вычисляться только в том случае, если a равно true<br/>
<br/>
Таким образом, операции || и && более удобны в вычислениях, позволяя сократить время на вычисление значения выражения и тем самым повышая производительность. А операции | и & больше подходят для выполнения поразрядных операций над числами.<br/>
<br/>
<b>Примеры:</b><br/>
<br/>
<tt>boolean a1 = (5 > 6) || (4 < 6); <br/>
// 5 > 6 - false, 4 < 6 - true, поэтому возвращается true<br/>
<br/>
boolean a2 = (5 > 6) || (4 > 6); <br/>
// 5 > 6 - false, 4 > 6 - false, поэтому возвращается false<br/>
<br/>
boolean a3 = (5 > 6) && (4 < 6); <br/>
// 5 > 6 - false, 4 < 6 - true, поэтому возвращается false<br/>
<br/>
boolean a4 = (50 > 6) && (4 / 2 < 3); <br/>
// 50 > 6 - true, 4/2 < 3 - true, поэтому возвращается true<br/>
<br/>
boolean a5 = (5 > 6) ^ (4 < 6); <br/>
// 5 > 6 - false, 4 < 6 - true, поэтому возвращается true<br/>
<br/>
boolean a6 = (50 > 6) ^ (4 / 2 < 3); <br/>
// 50 > 6 - true, 4/2 < 3 - true, поэтому возвращается false</tt><br/>
<br/>